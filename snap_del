pipeline {
    agent any
    environment {
        AWS_REGION = 'eu-north-1'               // Replace with your AWS region
        DAYS_OLD = 0                            // Number of days to consider a snapshot "old"
        AWS_CREDENTIALS_ID = 'AWS-credentials'  // Replace with the credentials ID for AWS in Jenkins
    }
    stages {
        stage('Clone Repository') {
            steps {
                // Fetch code from GitHub
                checkout scm
            }
        }
        stage('List Old Snapshots') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding', 
                    credentialsId: AWS_CREDENTIALS_ID
                ]]) {
                    script {
                        echo "Listing EC2 snapshots older than ${DAYS_OLD} day(s)..."

                        // Convert DAYS_OLD to an integer, and calculate the date that is DAYS_OLD days ago
                        def daysOldInt = DAYS_OLD.toInteger()
                        def dateFormat = new Date() - daysOldInt
                        def formattedDate = dateFormat.format("yyyy-MM-dd'T'HH:mm:ss'Z'")

                        // Use 'sh' to run AWS CLI commands
                        sh """
                            aws ec2 describe-snapshots --region $AWS_REGION \
                                --query "Snapshots[?StartTime<'${formattedDate}'].[SnapshotId, StartTime]" \
                                --output table
                        """
                    }
                }
            }
        }
        stage('Delete Old Snapshots') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding', 
                    credentialsId: AWS_CREDENTIALS_ID
                ]]) {
                    script {
                        echo "Deleting EC2 snapshots older than ${DAYS_OLD} day(s)..."

                        // Convert DAYS_OLD to an integer, and calculate the date that is DAYS_OLD days ago
                        def daysOldInt = DAYS_OLD.toInteger()
                        def dateFormat = new Date() - daysOldInt
                        def formattedDate = dateFormat.format("yyyy-MM-dd'T'HH:mm:ss'Z'")

                        // Get snapshot IDs of old snapshots
                        def snapshotIds = sh(script: """
                            aws ec2 describe-snapshots --region $AWS_REGION \
                                --query "Snapshots[?StartTime<'${formattedDate}'].[SnapshotId]" \
                                --output text
                        """, returnStdout: true).trim().split("\n")

                        // Loop through the snapshot IDs and delete them
                        snapshotIds.each { snapshotId ->
                            echo "Deleting snapshot ${snapshotId}"
                            sh """
                                aws ec2 delete-snapshot --region $AWS_REGION --snapshot-id ${snapshotId}
                            """
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            echo "Pipeline completed successfully. Old snapshots deleted."
        }
        failure {
            echo "Pipeline failed. Check the logs for details."
        }
    }
}
